CREATE DATABASE SQL_ASSIGNMENT;

--CREATING SCHEMA FOR EMPLOYEES
CREATE SCHEMA [EMPLOYEES];

--CREATING TABLE FOR EMPLOYEES
CREATE TABLE [EMPLOYEES].[TBL_DEPARTMENT_DETAILS]
(
    DEPARTMENTID INT CONSTRAINT PK_TBL_DEPARTMENT_DETAILS_DEPARTMENTID PRIMARY KEY,
    DEPARTMENTNAME VARCHAR(50) NOT NULL,
    [LOCATION] VARCHAR(70) NOT NULL,
    DEPARTMENTHEADNAME VARCHAR(100) NOT NULL
);
GO


--CREATING EMPLOYEES DETAILS TABLE

CREATE TABLE [EMPLOYEES].[TBL_EMPLOYEES_DETAILS]
(
    EMPLOYEEID INT CONSTRAINT PK_TBL_EMPLOYEES_DETAILS_EMPLOYEEID PRIMARY KEY,
    DEPARTMENTID INT CONSTRAINT FK_TBL_EMPLOYEES_DETAILS_TBL_DEPARTMENT_DETAILS_DEPARTMENTID REFERENCES [EMPLOYEES].[TBL_DEPARTMENT_DETAILS](DEPARTMENTID),
    EMPLOYEENAME VARCHAR(150) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    GENDER VARCHAR(6) NOT NULL,
    AGE TINYINT NOT NULL,
    SALARY DECIMAL(18,2) NOT NULL,
    CITY VARCHAR(70) NOT NULL,
    ISACTIVE BIT CONSTRAINT DF_TBL_EMPLOYEES_DETAILS_ISACTIVE DEFAULT (1),
    REGISTEREDON DATETIME NOT NULL,
    CONSTRAINT CHK_EMPLOYEE CHECK (AGE >= 18)
);
GO


--INSERTING DATA INTO TBL_DEPARTMENT_DETAILS WITH SEQUENCE
CREATE SEQUENCE DEPARTMENTID
    AS TINYINT
    START WITH 1
    INCREMENT BY 1;
GO

INSERT INTO [EMPLOYEES].[TBL_DEPARTMENT_DETAILS] (DEPARTMENTID, DEPARTMENTNAME, [LOCATION], DEPARTMENTHEADNAME)
VALUES
    (NEXT VALUE FOR DEPARTMENTID, 'CLOUD', 'BENGALURU', 'SANTHOSH'),
    (NEXT VALUE FOR DEPARTMENTID, 'SOFTWARE', 'PATNA', 'Ranjan'),
    (NEXT VALUE FOR DEPARTMENTID, 'MIGRATION', 'LUCKNOW', 'Dilip'),
    (NEXT VALUE FOR DEPARTMENTID, 'SALES', 'MAHRASTRA', 'Aadesh'),
    (NEXT VALUE FOR DEPARTMENTID, 'SUPPORT', 'AASAM', 'Sandeep'),
	(NEXT VALUE FOR DEPARTMENTID, 'HR', 'HYDERABAD', 'DILEEP');
GO
--INSERTING DATA INTO EMPLOYEE DETAILS.
CREATE SEQUENCE EMPLOYEEID
    AS TINYINT
    START WITH 1
    INCREMENT BY 1;
GO

INSERT INTO [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] (EMPLOYEEID, DEPARTMENTID, EMPLOYEENAME, EMAIL, GENDER, AGE, SALARY, CITY, ISACTIVE, REGISTEREDON)
VALUES
    (NEXT VALUE FOR EMPLOYEEID, 01, 'RASHMI', 'rashmi@gmail.com', 'Female', 27, 100000.00, 'BENGALURU', 1, GETDATE()),
    (NEXT VALUE FOR EMPLOYEEID, 02, 'PRAJWAL', 'prajwal@gmail.com', 'Male', 25, 25000.00, 'PATNA', 1, GETDATE()),
    (NEXT VALUE FOR EMPLOYEEID, 03, 'ASHA', 'asha@gmail.com', 'Female', 24, 90000.00, 'LUCKNOW', 1, GETDATE()),
    (NEXT VALUE FOR EMPLOYEEID, 04, 'PANCHAL', 'panchal@gmail.com', 'Male', 29, 60000.00, 'MAHRASTRA', 1, GETDATE()),
    (NEXT VALUE FOR EMPLOYEEID, 05, 'KARISHMA', 'karishma@gmail.com', 'Female', 23, 30000.00, 'AASAM', 1, GETDATE()),
	(NEXT VALUE FOR EMPLOYEEID, 05, 'JESINTHA', 'JESINTHA@gmail.com', 'Female', 23, 30000.00, 'HYDERABAD', 1, GETDATE());

GO
--SELECT EMPLOYEE WHOS GENDER IS FEMALE AND THEY ARE ACTIVE
SELECT EMPLOYEENAME FROM [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] WHERE GENDER = 'FEMALE' AND ISACTIVE = 1
GO

--CREATING  STORED PROCEDURE TO  ADD EMPLOYEE DETAILS IN [EMPLOYEES].[TBL_EMPLOYEES_DETAILS]

CREATE PROCEDURE INSERT_INTO_EMPLOYEES_DETAILS
	@DEPARTMENTID TINYINT,
	@EMPLOYEENAME VARCHAR(150),
	@EMAIL VARCHAR(150), 
	@GENDER VARCHAR(6), 
	@AGE TINYINT,
	@SALARY DECIMAL(18,2),
	@CITY VARCHAR(70),
	@ISACTIVE BIT,
    @REGISTEREDON DATETIME
	AS
	BEGIN
		BEGIN TRY
			DECLARE @ISEMAILEXIST VARCHAR(150)
			SELECT @ISEMAILEXIST = EMAIL FROM [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] WHERE EMAIL = @EMAIL
			IF @ISEMAILEXIST IS NULL
				BEGIN
					BEGIN TRAN 
						INSERT INTO [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] (EMPLOYEEID, DEPARTMENTID, EMPLOYEENAME, EMAIL, GENDER, AGE, SALARY, CITY, ISACTIVE, REGISTEREDON)
						VALUES
						(NEXT VALUE FOR EMPLOYEEID, @DEPARTMENTID, @EMPLOYEENAME, @EMAIL, @GENDER, @AGE, @SALARY, @CITY, @ISACTIVE, GETDATE())
					COMMIT TRAN
				END
			ELSE 
			BEGIN
				PRINT 'EMAIL ALREADY EXISTS'
			END
		END TRY
		BEGIN CATCH
			SELECT ERROR_LINE()
		END CATCH
	END

GO

EXEC INSERT_INTO_EMPLOYEES_DETAILS @DEPARTMENTID = 3, @EMPLOYEENAME = 'IRSHAD', @EMAIL = 'irshad@gmail.com', @GENDER = 'MALE', @AGE = 28,
@SALARY = 80000.00, @CITY = 'Bhubneswar', @ISACTIVE = 1, @REGISTEREDON = '2023-09-17 14:30:00.000';
GO


SELECT * FROM [Employees].[Tbl_Employees_Details]
GO


--CREATING A STORE PROCEDURE TO UPDATE IN [EMPLOYEES].[TBL_EMPLOYEES_DETAILS];
CREATE PROCEDURE UPDATE_EMPLOYEES_DETAILS
    @EMPLOYEEID INT,
    @EMPLOYEENAME VARCHAR(150),
    @EMAIL VARCHAR(150), 
    @GENDER VARCHAR(6), 
    @AGE TINYINT,
    @SALARY DECIMAL(18,2),
    @CITY VARCHAR(70),
    @ISACTIVE BIT,
    @REGISTEREDON DATETIME
    AS
    BEGIN
        BEGIN TRY
           DECLARE @ISEMAILEXIST VARCHAR(150)
            SELECT @ISEMAILEXIST = EMAIL FROM [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] WHERE EMAIL = @EMAIL
            IF @ISEMAILEXIST IS NULL
            BEGIN
            DECLARE @ISUSEREXIST VARCHAR(150)
            SELECT @ISUSEREXIST = EMPLOYEEID FROM [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] 
            IF @ISUSEREXIST IS NOT NULL
                BEGIN
                    BEGIN TRAN 
                        UPDATE [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] SET EMPLOYEENAME = @EMPLOYEENAME ,GENDER = @GENDER, EMAIL = @EMAIL,
                        AGE = @AGE, SALARY = @SALARY, CITY = @CITY, ISACTIVE = @ISACTIVE WHERE EMPLOYEEID = @EMPLOYEEID
                    COMMIT TRAN
                END
            ELSE 
            BEGIN
                PRINT 'USER DOES NOT EXIST '
            END
            END
            ELSE 
            BEGIN
                PRINT 'EMAIL ALREADY EXISTS'
            END
        END TRY
        BEGIN CATCH
            SELECT ERROR_LINE()
        END CATCH
    END
GO

EXEC UPDATE_EMPLOYEES_DETAILS @EMPLOYEEID='8',  @EMPLOYEENAME='JESINSTHA LUIS', @EMAIL='JESINTHALUIS@EXAMPLE.COM', @GENDER='FEMALE', @AGE=35,
@SALARY=120030.00, @CITY='DEHRADUN', @ISACTIVE=1, @REGISTEREDON = '2023-09-17 14:30:00.000';

GO

--CREATING PROCEDURE FOR DISABLING EMPLOYEE IF EMPLOYEE IS ENABLE
CREATE PROCEDURE DISABLE_EMPLOYEE
  @EMPLOYEEID INT
  AS
  BEGIN
    BEGIN TRY
      DECLARE @ISACTIVEUSER BIT
      SELECT @ISACTIVEUSER = EMP.ISACTIVE FROM [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] EMP WHERE @EMPLOYEEID = EMP.EMPLOYEEID

	  IF @ISACTIVEUSER = 1
	  BEGIN
	    BEGIN TRAN
		UPDATE [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] SET ISACTIVE = 0 WHERE EMPLOYEEID = @EMPLOYEEID
		COMMIT TRAN
		PRINT 'EMPLOYEE DISABLED SUCCESSFULLY'
	  END
	  ELSE IF @ISACTIVEUSER = 0
	  BEGIN
	    PRINT 'EMPLOYEE IS  ALREADY DISABLED'
	  END
	  ELSE 
	  BEGIN
	    PRINT 'EMPLOYEE NOT FOUND WITH YOUR PROVIDED DETAILS'
	  END
	END TRY
	BEGIN CATCH
	  SELECT ERROR_LINE()
	END CATCH
  END
  DROP PROCEDURE DISABLE_EMPLOYEE

GO

--EXECUTING DISABLE USER PROCEDURE
EXEC DISABLE_EMPLOYEE @EMPLOYEEID = 11;
GO
SELECT * FROM [Employees].[Tbl_Employees_Details]

GO


--CREATING INNER JOIN VIEW
CREATE VIEW INNER_JOIN_VIEW
AS
SELECT DEPT.DEPARTMENTNAME, DEPT.DEPARTMENTHEADNAME, AVG(EMP.SALARY) AVERAGE_SAL
FROM [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] EMP
INNER JOIN
[EMPLOYEES].[TBL_DEPARTMENT_DETAILS] DEPT
ON
EMP.DEPARTMENTID = DEPT.DEPARTMENTID
GROUP BY DEPT.DEPARTMENTNAME, DEPT.DEPARTMENTHEADNAME

GO

SELECT * FROM INNER_JOIN_VIEW

GO

--CREATING LEFT JOIN VIEW
CREATE VIEW LEFT_JOIN_VIEW
AS
SELECT D.DEPARTMENTNAME, COUNT(E.EMPLOYEEID) AS EMPLOYEECOUNT
FROM [EMPLOYEES].[TBL_DEPARTMENT_DETAILS] D
LEFT JOIN [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] E ON D.DEPARTMENTID = E.DEPARTMENTID
GROUP BY D.DEPARTMENTNAME;

GO

SELECT * FROM LEFT_JOIN_VIEW;

GO

--CREATING RIGHT JOIN VIEW
CREATE VIEW RIGHT_JOIN_VIEW
AS
SELECT D.DEPARTMENTNAME, COUNT(E.EMPLOYEEID) AS EMPLOYEECOUNT
FROM [EMPLOYEES].[TBL_DEPARTMENT_DETAILS] D
RIGHT JOIN [EMPLOYEES].[TBL_EMPLOYEES_DETAILS] E ON D.DEPARTMENTID = E.DEPARTMENTID
GROUP BY D.DEPARTMENTNAME;

SELECT * FROM RIGHT_JOIN_VIEW;
GO